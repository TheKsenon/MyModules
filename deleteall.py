from telethon.errors import ChatAdminRequiredError
from telethon.tl.functions.channels import GetParticipantRequest
from telethon.tl.types import ChannelParticipantAdmin, ChannelParticipantCreator
from .. import loader

@loader.tds
class DeleteMessagesMod(loader.Module):
    """–ú–æ–¥—É–ª—å —É–¥–∞–ª—è–µ—Ç –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    [üíÄ] –ü—Ä–∏–º–µ—Ä: .deleteall @username
    """

    strings = {"name": "DeleteMessages"}

    async def deleteallcmd(self, message):
        """–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""

        if len(message.mentions) == 0:
            return await message.edit("[DeleteMessages] –£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: .deleteall @username")

        user = message.mentions[0]

        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            reply = await message.client(GetParticipantRequest(message.chat_id, user.id))
            if isinstance(reply.participant, (ChannelParticipantAdmin, ChannelParticipantCreator)):
                count = 0
                async for msg in message.client.iter_messages(message.to_id, from_user=user.id):
                    await message.client.delete_messages(message.to_id, msg)
                    count += 1

                await message.edit(f"[‚úÖ] –£–¥–∞–ª–µ–Ω–æ {count} —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.first_name if user.first_name else user.username}")
            else:
                await message.edit("[üö´] –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ —á—Ç–æ–±—ã —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è. –ü—Ä–∏—á–∏–Ω–∞: –ù–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        
        except ChatAdminRequiredError:
            await message.edit("[üö´] –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ —á—Ç–æ–±—ã —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è. –ü—Ä–∏—á–∏–Ω–∞: –ù–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
