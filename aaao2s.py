import os
import requests
from .. import loader, utils
from telethon.errors.rpcerrorlist import UsernameOccupiedError
from telethon.tl.functions.account import UpdateProfileRequest, UpdateUsernameRequest

API_KEY_GPT35 = 'ddosxd-api-1jq4e9xbzu2ilgn'
headers = {'Authorization': API_KEY_GPT35}

def register(cb):
    cb(UserDataMod())

class UserDataMod(loader.Module):
    """[üé∂] AI Bio
    
    [üòÅ] –ò–ò –ø—Ä–∏–¥—É–º–∞–µ—Ç –∑–∞ –≤–∞—Å –±–∏–æ!
    
    [üêç] –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:
    @XenonModules / @officialksenon
    –ö–æ–¥ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram."""
    strings = {'name': 'UserData'}
    
    async def biocmd(self, message):
        """–ö–æ–º–∞–Ω–¥–∞ .bio –∏–∑–º–µ–Ω–∏—Ç –≤–∞—à–µ –±–∏–æ."""
        args = utils.get_args_raw(message)
        if not args:
            return await message.edit('–ù–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.')
        await message.edit('[‚úÖ] –ó–∞–ø—Ä–æ—Å –Ω–∞ –±–∏–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –í–∞—à –∑–∞–ø—Ä–æ—Å: {}'.format(args))
        
        data = {'model': 'gpt-3.5-turbo', 'messages': [{'role': 'user', 'content': args + "–ù–∞–ø–∏—à–∏ –±–∏–æ –∫ –∞–∫–∫–∞—É–Ω—Ç—É (–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π). –ú–∞–∫—Å–∏–º—É–º —Å–∏–º–≤–æ–ª–æ–≤ 70, –Ω–∞–ø–∏—à–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –±–∏–æ, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –±—ã–ª –±–æ–ª—å—à–µ 70"}]}
        response = requests.post('https://api.ddosxd.ru/v1/chat', headers=headers, json=data)
        if response.status_code == 200:
            await message.client(UpdateProfileRequest(about=response.json()['messages'][0]['content']))
            await message.edit('üîÆ –ë–∏–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å!')
        else:
            await message.edit('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞.')
